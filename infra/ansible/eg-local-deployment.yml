- name: Local Deployment of Quotes app with HTTPS
  hosts: localhost
  connection: local
  become: false

  vars:
    repo_dir: "{{ lookup('env', 'PWD') }}"
    nginx_container: infra3-eg-nginx-proxy-1
    certbot_container: infra3-eg_certbot-1

  tasks:
    - name: Ensure Docker Compose is installed
      command: docker compose version
      register: compose_check
      failed_when: compose_check.rc != 0
      changed_when: false

    - name: Start Docker containers
      command: docker compose up -d
      args:
        chdir: "{{ repo_dir }}"
      register: compose_up
      retries: 3
      delay: 5
      until: compose_up.rc == 0

    - name: Wait for Nginx container to be up
      shell: |
        until docker exec {{ nginx_container }} nginx -v > /dev/null 2>&1; do
          echo "Waiting for nginx container..."
          sleep 3
        done
      retries: 10
      delay: 3
      register: nginx_ready
      until: nginx_ready.rc == 0

    - name: Template pre-HTTPS Nginx config
      template:
        src: temp/beforeCert
        dest: "{{ repo_dir }}/nginx-before.conf"

    - name: Copy pre-HTTPS config into Nginx
      command: docker cp "{{ repo_dir }}/nginx-before.conf" {{ nginx_container }}:/etc/nginx/nginx.conf


    - name: Reload Nginx with HTTP config
      command: docker exec {{ nginx_container }} nginx -s reload

    - name: Create folder for ACME challenge inside Nginx
      command: docker exec {{ nginx_container }} sh -c "mkdir -p ../../certbot/conf/live/eg-quotes.duckdns.org"

#    - name: Generate self-signed certificate
#      command: >
#        docker cp ../../certbot-acme/issue.sh acme-sh:/issue.sh && \
#        docker exec acme-sh chmod +x /issue.sh && \
#        docker exec acme-sh /issue.sh

    - name: Run acme.sh script in container as root to avoid permission issues
      shell: |
        docker cp ../../certbot-acme/issue.sh acme-sh:/issue.sh
        docker exec --user root acme-sh chmod +x /issue.sh
        docker exec --user root acme-sh mkdir -p /acme.sh/live/eg-quotes.duckdns.org
        docker exec --user root acme-sh /issue.sh
      args:
        executable: /bin/sh
 

    - name: Copy certs to shared /certs folder via acme.sh install-cert
      shell: |
        docker exec --user root acme-sh acme.sh --install-cert -d eg-quotes.duckdns.org \
        --fullchain-file /certs/fullchain.pem \
        --key-file /certs/privkey.pem

    
    - name: Template post-HTTPS Nginx config
      template:
        src: temp/afterCert
        dest: "{{ repo_dir }}/nginx-after.conf"


    - name: Copy post-HTTPS config into Nginx
      command: docker cp "{{ repo_dir }}/nginx-after.conf" {{ nginx_container }}:/etc/nginx/nginx.conf

    - name: Reload Nginx with HTTPS config
      command: docker exec {{ nginx_container }} nginx -s reload
